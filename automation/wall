args = { ... }

function main()
    io.write("function main()\n")
    if #args ~= 2 then
        io.write("Usage: wall <length> <height>\n")
        return
    end

    length = tonumber(args[1])
    height = tonumber(args[2])

    io.write("Length is " .. length .. ".\n")
    io.write("Height is " .. height .. ".\n")

    moved = 0
    while (moved < length) do
        forward()

        dug = dig()
        pillar(dug + height)
        if need_refuel() then
            refuel()
        end
--        wall()    

        moved = moved + 1
    end
end

-- Move forward one block, climb/descend as neccasary
function forward()
    io.write("function forward()\n")
    while not turtle.forward() do
        turtle.up()
    end
    s, d = turtle.inspectDown()
    while not s do
        if not turtle.down() then
            turtle.attackDown()
        end
        s, d = turtle.inspectDown()
    end
end

-- Dig Down to bedrock
function dig()
    io.write("function dig()\n")
    down = 0
    s, d = turtle.inspectDown()
    turtle.digDown()
    while not (s and d["name"] == "minecraft:bedrock") do
        while turtle.down() do
            down = down + 1
            turtle.digDown()
            if turtle.getItemCount(12) > 0 then
                deposit()
            end
        end
        s, d = turtle.inspectDown()
        turtle.attackDown()
    end
    return down
end

-- Pillar back x blocks
function pillar(up)
    io.write("function pillar(up)\n")
    built = 0
    turtle.select(13)
    while built < up do
        if turtle.up() then
            while not turtle.placeDown() do
                restock()
            end
            built = built + 1
        else
            turtle.attackUp()
        end
    end
end

-- Deposit all of the mined materials
function deposit()
    io.write("function deposit()\n")
    last_slot = turtle.getSelectedSlot()
    turtle.select(15)
    placeUp()
    i = 1
    while (i <= 12) do
        turtle.select(i)
        turtle.dropUp()
        i = i + 1
    end
    turtle.select(15)
    turtle.digUp()
    turtle.select(last_slot)
end

-- Restock Build Material
function restock()
    io.write("function restock()\n")
    last_slot = turtle.getSelectedSlot()

    turtle.select(14)
    placeUp()
    turtle.suckUp()
    turtle.transferTo(13)
    turtle.dropUp()
    turtle.digUp()

    turtle.select(last_slot)
end

function need_refuel()
    if turtle.getFuelLevel() / turtle.getFuelLimit() < .5 then
        return 1
    else
        return 0
    end
end

-- Restock Fuel 
function refuel()
    io.write("function refuel()\n")
    last_slot = turtle.getSelectedSlot()

    turtle.select(16)
    placeUp()
    turtle.suckUp()
    turtle.refuel(turtle.getItemCount())
    turtle.digUp()

    turtle.select(last_slot)
end

function placeUp()
    io.write("function placeUp()\n")
    s = turtle.placeUp()
    while not s do
        turtle.attackUp()
        s = turtle.placeUp()
    end
end

main()
